package main

import (
	"fmt"
	"sync"
)

func main() {
	//входные данные
	var input = []int{2, 4, 6, 8, 10}

	//создаем вейтгруппу для синхронизации(чтобы процесс раньше горутинки не завершился)
	wg := sync.WaitGroup{}

	//переменная выхода
	var output int

	//мутекс для потокобезопасности переменной выхода
	mutex := sync.Mutex{}

	//в цикле вызываем анонимную функцию рассчета квадратов слайса
	for i := 0; i < len(input); i++ {
		wg.Add(1)
		//каждая итерация цикла - новая горутина. Количество горутин в данном случае - количество элиментов слайса
		go func(val int) {
			//устанавливаем defer функцию для разлочки потока при завершении или ошибке
			defer mutex.Unlock()
			//лочим поток, чтобы безопасно записать
			mutex.Lock()
			//пишем в переменную
			output += input[val] * input[val]
			wg.Done()
		}(i)
	}

	//ждем все горутинки
	wg.Wait()

	//результат
	fmt.Print(output)
}
